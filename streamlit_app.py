import streamlit as st
import pandas as pd
import plotly.express as px

# --- CSV dosyalarÄ±nÄ± oku ---
color_df = pd.read_csv("color_deficiency.csv")
direction_df = pd.read_csv("direction_deficiency.csv")
letter_df = pd.read_csv("letter_deficiency.csv")
word_df = pd.read_csv("word_deficiency.csv")

# --- Ã–n iÅŸleme ---
def preprocess(df, hata_col, kategori_adi):
    df = df.copy()
    df["category"] = kategori_adi + "_" + df[hata_col].astype(str)
    return df[["week", "category", "success_rate"]]

# --- Verileri dÃ¶nÃ¼ÅŸtÃ¼r ---
color_clean = preprocess(color_df, "renk_hatasi", "renk")
direction_clean = preprocess(direction_df, "yon_hatasi", "yon")
letter_clean = preprocess(letter_df, "harf_hatasi", "harf")
word_clean = preprocess(word_df, "kelime_hatasi", "kelime")

# --- Hepsini birleÅŸtir ---
all_data = pd.concat([color_clean, direction_clean, letter_clean, word_clean], ignore_index=True)

# --- BaÅŸarÄ± GrafiÄŸi ---
st.title("ğŸ§  Disleksi GeliÅŸim Paneli")
st.subheader("ğŸ“ˆ HaftalÄ±k BaÅŸarÄ± GrafiÄŸi")

weekly_avg = all_data.groupby(["week", "category"], as_index=False).mean()
fig = px.line(weekly_avg, x="week", y="success_rate", color="category", markers=True)
fig.update_layout(yaxis_range=[0, 100], template="plotly_dark")
st.plotly_chart(fig)

# --- ZayÄ±f Alanlar + Ã–neri ---
st.subheader("ğŸ“‰ HaftalÄ±k ZayÄ±f Alanlar ve Ã–neriler")

zayif_alanlar = (
    weekly_avg.sort_values(["week", "success_rate"])
    .groupby("week")
    .head(3)
    .reset_index(drop=True)
)

# --- Ã–neri sÃ¶zlÃ¼ÄŸÃ¼ ---
oneriler = {
    "renk_sarÄ±": "SarÄ± rengi ayÄ±rt etmeye yÃ¶nelik renk karÅŸÄ±laÅŸtÄ±rma egzersizleri Ã¶nerilir.",
    "renk_yeÅŸil": "YeÅŸil tonlarÄ± iÃ§in dikkat geliÅŸtirme oyunlarÄ± kullanabilirsin.",
    "renk_kÄ±rmÄ±zÄ±": "KÄ±rmÄ±zÄ± rengi hÄ±zlÄ± tanÄ±ma Ã¼zerine alÄ±ÅŸtÄ±rmalar yapÄ±lmalÄ±.",
    "yon_saÄŸ-sol": "SaÄŸ ve sol kavramlarÄ±nÄ± pekiÅŸtirmek iÃ§in fiziksel yÃ¶n egzersizleri Ã¶nerilir.",
    "yon_saat yÃ¶nÃ¼-tersi": "Saat yÃ¶nÃ¼ kavramÄ± iÃ§in saat Ã§izimi ve yÃ¶n oklarÄ± ile uygulamalÄ± aktiviteler yapabilirsin.",
    "yon_yukarÄ±-aÅŸaÄŸÄ±": "YukarÄ±-aÅŸaÄŸÄ± yÃ¶nlerini vÃ¼cut hareketleriyle Ã¶ÄŸrenmeye yÃ¶nelik oyunlar etkilidir.",
    "yon_saÄŸ Ã§apraz-sol Ã§apraz": "Ã‡apraz yÃ¶nleri iÃ§eren dikkat ve koordinasyon oyunlarÄ± kullanÄ±labilir.",
    "harf_b-d": "b ve d harflerini ayÄ±rt etmeye yÃ¶nelik ayna egzersizleri ve yazma Ã§alÄ±ÅŸmalarÄ± Ã¶nerilir.",
    "harf_k-t": "Benzer harfler olan k ve t iÃ§in eÅŸleÅŸtirme kartlarÄ± kullanÄ±labilir.",
    "harf_m-n": "m-n harf farkÄ±nÄ± artÄ±rmak iÃ§in sesli heceleme ve yazÄ±m egzersizleri Ã¶nerilir.",
    "kelime_Ã§alÄ±ÅŸan-Ã§alÄ±ÅŸkan": "Benzer sÃ¶zcÃ¼kler iÃ§in anlam farkÄ± Ã§alÄ±ÅŸmalarÄ± Ã¶nerilir.",
    "kelime_gÃ¼l-gÃ¼l": "Ã‡ok anlamlÄ± kelimelerle ilgili hikÃ¢ye yazma ve cÃ¼mle kurma Ã§alÄ±ÅŸmalarÄ± Ã¶nerilir."
}

zayif_alanlar["Ã–neri"] = zayif_alanlar["category"].map(oneriler)
st.dataframe(zayif_alanlar)
